{"version":3,"sources":["Buttons.js","index.js"],"names":["Buttons","props","class","className","onClick","clearAll","clearValue","calculation","value","digitOnClick","posNeg","execute","App","state","needDigit","path","symbolClicked","executed","bind","event","this","setState","digit","target","newPath","push","length","automaticExecute","newStr","join","result","eval","slice","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea4ab825.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./index.css\";\r\n\r\nconst Buttons = props => {\r\n    return(\r\n        <div class=\"container\">\r\n            <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <button onClick={props.clearAll}>C</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.clearValue}>CE</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <button onClick={props.calculation} value=\"/\">/</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                        <button onClick={props.calculation} value=\"*\">X</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                        <button onClick={props.digitOnClick} value=\"7\">7</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"8\">8</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"9\">9</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.calculation} value=\"-\">-</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"4\">4</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"5\">5</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"6\">6</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.calculation} value=\"+\">+</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"1\">1</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"2\">2</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"3\">3</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.posNeg}>+-</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\".\">.</button>\r\n                    </div>\r\n                    <div className=\"col-3\">\r\n                    <button onClick={props.digitOnClick} value=\"0\">0</button>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                    <button onClick={props.execute}>=</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Buttons from \"./Buttons\";\n\nimport './index.css';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            value: \"\",\n            needDigit: true,\n            path: [],\n            symbolClicked: false,\n            executed: false\n        }\n\n        this.digitOnClick = this.digitOnClick.bind(this);\n        this.calculation = this.calculation.bind(this);\n        this.execute = this.execute.bind(this);\n        this.clearAll = this.clearAll.bind(this);\n        this.clearValue = this.clearValue.bind(this);\n        this.posNeg = this.posNeg.bind(this);\n    }\n\n    digitOnClick(event) {\n        if (this.state.symbolClicked === true) {\n            this.setState({ value: \"\"});\n            let digit = event.target.value;\n            this.setState({ value: digit, needDigit: false, symbolClicked: false });\n        } else {\n            let digit = this.state.value;\n            digit = digit + event.target.value;\n            this.setState({ value: digit, needDigit: false });\n        }\n    }\n\n    calculation(event) {\n        if (this.state.needDigit === false || this.state.executed) {\n            if (this.state.executed) {\n                var newPath = [];\n            } else {\n                var newPath = this.state.path;\n            }\n            newPath.push(this.state.value);\n            newPath.push(event.target.value);\n            this.setState({ path: newPath, needDigit: true, symbolClicked: true, executed: false});\n            if (this.state.path.length > 2 && this.state.path.length % 2 === 0) {\n                this.automaticExecute();\n            }\n        } else {\n            return false;\n        }\n    }\n\n    execute() {\n        if (this.state.path.length >= 2 && this.state.executed === false) {\n            let newPath = this.state.path;\n            newPath.push(this.state.value);\n            this.setState({ path: newPath});\n            let newStr = this.state.path.join(\"\");\n            let result = eval(newStr);\n            this.setState({value: result, needDigit: true, symbolClicked: true, executed: true});\n        } else {\n            return false;\n        }\n            \n        \n    }\n\n    automaticExecute() {\n        let newPath = this.state.path.slice(0, this.state.path.length - 1);\n        let newStr = newPath.join(\"\");\n        let result = eval(newStr);\n        this.setState({ value: result, needDigit: true, symbolClicked: true });\n    }\n\n    posNeg() {\n        let value = this.state.value;\n        if (value[0] !== \"-\") {\n            value = \"-\" + value;\n            this.setState({ value: value });\n        } else {\n            value = value.slice(1, value.length);\n            this.setState({ value: value });\n        }\n    }\n\n    clearAll() {\n        this.setState({\n            value: \"\",\n            needDigit: true,\n            path: [],\n            symbolClicked: false,\n            executed: false\n        });\n    }\n\n    clearValue() {\n        this.setState({ value: \"\" });\n    }\n\n    render() {\n        return(\n            <div>\n                <h1 className=\"center\">React <span>Calculator</span></h1>\n                <div className=\"center center-block calculator\">\n                    <h4>{this.state.path}</h4>\n                    <h2>{this.state.value ? this.state.value : \"0\"}</h2>\n                    <Buttons \n                    digitOnClick={(event) => this.digitOnClick(event)}\n                    calculation={(event) => this.calculation(event)}\n                    execute={this.execute}\n                    clearAll={this.clearAll}\n                    clearValue={this.clearValue}\n                    posNeg={this.posNeg}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}